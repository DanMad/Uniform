// Pattern outline
// * .avatar
// *   .avatar__border-outer
// *     .avatar__border
// *   .avatar__image

// Imports
@import '../utilities/scss/variables/tokens';
@import '../utilities/scss/functions/get-circumference';
@import '../utilities/scss/functions/rem';
@import '../utilities/scss/mixins/bem';
@import '../utilities/scss/mixins/device';
@import '../utilities/scss/mixins/pseudo';

// Rules
@include b(avatar) {
  position: relative;
  display: inline-block;
  box-sizing: border-box;
  width: 100%;
  padding-top: 100%;
  border: $border-dark;
  border-radius: $border-radius-round;
  margin-bottom: $space-m;

  // * Fixes an issue with intermittent margin-bottom applied to image
  // * elements.
  vertical-align: bottom;

  @include m(s) {
    width: $space-xl;
    height: $space-xl;
    padding-top: 0;
    margin-bottom: 0;

    @include e(border-outer, child) {
      width: $space-xl;
      height: $space-xl;
    }

    @include device(no-touch) {
      @include pseudo(hover) {
        @include e(border) {
          stroke-dasharray: get-circumference(31) 0;
        }
      }
      @include pseudo(focus) {
        @include e(border) {
          stroke-dasharray: get-circumference(31) 0;
        }
      }

      @include e(border) {
        stroke-dasharray: 0 get-circumference(31);
        stroke-dashoffset: ((get-circumference(-31) / 4) * 3);
      }
    }
  }
  @include m(m) {
    width: $space-xxl;
    height: $space-xxl;
    padding-top: 0;
    margin-bottom: 0;

    @include e(border-outer, child) {
      width: $space-xxl;
      height: $space-xxl;
    }

    @include device(no-touch) {
      @include pseudo(hover) {
        @include e(border) {
          stroke-dasharray: get-circumference(39) 0;
        }
      }
      @include pseudo(focus) {
        @include e(border) {
          stroke-dasharray: get-circumference(39) 0;
        }
      }

      @include e(border) {
        stroke-dasharray: 0 get-circumference(39);
        stroke-dashoffset: ((get-circumference(-39) / 4) * 3);
      }
    }
  }
  @include m(l) {
    width: $space-xxxl;
    height: $space-xxxl;
    padding-top: 0;
    margin-bottom: 0;

    @include e(border-outer, child) {
      width: $space-xxxl;
      height: $space-xxxl;
    }

    @include device(no-touch) {
      @include pseudo(hover) {
        @include e(border) {
          stroke-dasharray: get-circumference(47) 0;
        }
      }
      @include pseudo(focus) {
        @include e(border) {
          stroke-dasharray: get-circumference(47) 0;
        }
      }

      @include e(border) {
        stroke-dasharray: 0 get-circumference(47);
        stroke-dashoffset: ((get-circumference(-47) / 4) * 3);
      }
    }
  }

  @include m(reversed) {
    border-color: $state-reversed;

    @include e(border) {
      stroke: $state-reversed-hover;
    }

    @include device(no-touch) {
      @include e(border) {
        stroke: $state-reversed-hover;
      }
    }
  }

  @include e(border-outer) {
    position: absolute;
    top: rem(-1px);
    left: rem(-1px);
  }
  @include e(border) {
    stroke: $state-default;
    stroke-width: 1;
    fill: none;

    @include device(no-touch) {
      stroke: $state-default-hover;
      transition: stroke $transition-duration-x1 $transition-timing-default,
        stroke-dasharray $transition-duration-x4 $transition-timing-default;
    }
  }
  @include e(image) {
    position: absolute;
    top: $space-xxs;
    left: $space-xxs;
    width: calc(100% - #{rem(4px)});
    height: calc(100% - #{rem(4px)});
    border-radius: $border-radius-round;

    @include m(female-1) {
      background: url('~assets/avatar__image--female-1.svg'),
        linear-gradient(45deg, rgba($viking, 0.13), rgba($viking-tint, 0.13)),
        $blizzard;

      // * A visual hack to position images correctly.
      background-position: center bottom rem(-1px), 0;

      background-repeat: no-repeat, repeat;
      background-size: auto 85%, cover;
    }
    @include m(female-2) {
      background: url('~assets/avatar__image--female-2.svg'),
        linear-gradient(45deg, rgba($viking, 0.13), rgba($viking-tint, 0.13)),
        $blizzard;

      // * A visual hack to position images correctly.
      background-position: center bottom rem(-1px), 0;

      background-repeat: no-repeat, repeat;
      background-size: auto 85%, cover;
    }
    @include m(male-1) {
      background: url('~assets/avatar__image--male-1.svg'),
        linear-gradient(45deg, rgba($viking, 0.13), rgba($viking-tint, 0.13)),
        $blizzard;

      // * A visual hack to position images correctly.
      background-position: center bottom rem(-1px), 0;

      background-repeat: no-repeat, repeat;
      background-size: auto 85%, cover;
    }
    @include m(male-2) {
      background: url('~assets/avatar__image--male-2.svg'),
        linear-gradient(45deg, rgba($viking, 0.13), rgba($viking-tint, 0.13)),
        $blizzard;

      // * A visual hack to position images correctly.
      background-position: center bottom rem(-1px), 0;

      background-repeat: no-repeat, repeat;
      background-size: auto 85%, cover;
    }
  }

  @include device(no-touch) {
    @include pseudo(hover) {
      @include e(border) {
        stroke: $state-default-hover;
      }
    }
    @include pseudo(focus) {
      outline: $focus-outline;

      @include e(border) {
        stroke: $state-default-focus;
      }
    }
    @include pseudo(active) {
      @include e(border) {
        stroke: $state-default-active;
      }
    }
  }
}
