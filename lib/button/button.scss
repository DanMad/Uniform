// Pattern outline
// * .button

// Imports
@import '../utilities/scss/variables/tokens';
@import '../utilities/scss/functions/rem';
@import '../utilities/scss/mixins/bem';

// Rules
@include b(button) {
  overflow: hidden;
  display: block;
  box-sizing: border-box;
  width: 100%;
  height: $space-xxxl;
  padding: $space-s $space-l;
  border: none;
  border-radius: $button-border-radius;
  outline: none;
  margin: 0 0 $space-m;
  background-color: transparent;
  font-family: $font-family-sans-serif;
  font-size: rem(14px);
  font-weight: $button-font-weight;
  text-align: center;
  text-decoration: none;
  line-height: $space-xl;
  white-space: nowrap;
  transition: $transition-duration-x1 $transition-timing-default;
  transition-property: box-shadow, border, background-color, color;

  // @at-root {
  //   @include b(modal) {
  //     @include e(actions) {
  //       @include b(button, descendant) {
  //         margin-bottom: 0;
  //       }
  //     }
  //   }
  // }

  @include m(compact) {
    height: $space-xxl;
    padding: $space-s $space-m;
    margin: 0 0 $space-s;
    font-size: rem(12px);
    line-height: $space-m;
  }
  @include m(primary) {
    border: rem(1px) solid $state-default;
    background-color: $state-default;
    color: $blizzard;

    &:disabled {
      border: rem(1px) solid $state-disabled;
      background-color: $state-disabled;
    }

    @include m(error) {
      border: rem(1px) solid $state-error;
      background-color: $state-error;
    }
    @include m(success) {
      border: rem(1px) solid $state-success;
      background-color: $state-success;
    }
    @include m(reversed) {
      border: rem(1px) solid $blizzard;
      background-color: $blizzard;
      color: $state-default;
    }
  }

  @include m(secondary) {
    border: rem(1px) solid $state-default;
    color: $state-default;

    &:disabled {
      border: rem(1px) solid $state-disabled;
      color: $state-disabled;
    }

    @include m(error) {
      border: rem(1px) solid $state-error;
      color: $state-error;
    }
    @include m(success) {
      border: rem(1px) solid $state-success;
      color: $state-success;
    }
    @include m(reversed) {
      border: rem(1px) solid $blizzard;
      color: $blizzard;
    }
  }
}

// Contextual -----------------------------------------------------------------
@include b(no-touchevents) {
  @include b(button) {
    cursor: pointer;
    user-select: none;

    @include m(primary) {
      &:disabled {
        cursor: not-allowed;

        &:hover {
          border-color: $state-disabled;
          background-color: $state-disabled;
        }
        &:active {
          color: $blizzard;
        }
      }

      &:hover {
        border-color: $state-default-hover;
        background-color: $state-default-hover;
      }
      &:focus {
        border-color: $state-default-focus;
        background-color: $state-default-focus;
      }
      &:active {
        border-color: $state-default-active;
        background-color: $state-default-active;
        color: $fossil-transparent;
      }

      @include m(error) {
        &:hover {
          border-color: $state-error-hover;
          background-color: $state-error-hover;
        }
        &:focus {
          border-color: $state-error-focus;
          background-color: $state-error-focus;
        }
        &:active {
          border-color: $state-error-active;
          background-color: $state-error-active;
          color: $fossil-transparent;
        }
      }
      @include m(success) {
        &:hover {
          border-color: $state-success-hover;
          background-color: $state-success-hover;
        }
        &:focus {
          border-color: $state-success-focus;
          background-color: $state-success-focus;
        }
        &:active {
          border-color: $state-success-active;
          background-color: $state-success-active;
          color: $fossil-transparent;
        }
      }
      @include m(reversed) {
        &:hover {
          border-color: $blizzard;
          box-shadow: $box-shadow-layer-1;
          background-color: $blizzard;
          color: $state-default-hover;
        }
        &:focus {
          border-color: $blizzard;
          box-shadow: $box-shadow-layer-1;
          background-color: $blizzard;
          color: $state-default-focus;
        }
        &:active {
          border-color: $blizzard;
          box-shadow: none;
          color: rgba($state-default-active, 0.21);
        }
      }
    }

    @include m(secondary) {
      &:disabled {
        cursor: not-allowed;

        &:hover {
          border-color: $state-disabled;
          background-color: transparent;
          color: $state-disabled;
        }
        &:active {
          color: $state-disabled;
        }
      }

      &:hover {
        border-color: $state-default-hover;
        background-color: $state-default-hover;
        color: $blizzard;
      }
      &:focus {
        border-color: $state-default-focus;
        background-color: $state-default-focus;
        color: $blizzard;
      }
      &:active {
        border-color: $state-default-active;
        background-color: $state-default-active;
        color: $fossil-transparent;
      }

      @include m(error) {
        &:hover {
          border-color: $state-error-hover;
          background-color: $state-error-hover;
          color: $blizzard;
        }
        &:focus {
          border-color: $state-error-focus;
          background-color: $state-error-focus;
          color: $blizzard;
        }
        &:active {
          border-color: $state-error-active;
          background-color: $state-error-active;
          color: $fossil-transparent;
        }
      }
      @include m(success) {
        &:hover {
          border-color: $state-success-hover;
          background-color: $state-success-hover;
          color: $blizzard;
        }
        &:focus {
          border-color: $state-success-focus;
          background-color: $state-success-focus;
          color: $blizzard;
        }
        &:active {
          border-color: $state-success-active;
          background-color: $state-success-active;
          color: $fossil-transparent;
        }
      }
      @include m(reversed) {
        &:hover {
          border-color: $blizzard;
          box-shadow: $box-shadow-layer-1;
          background-color: $blizzard;
          color: $state-default-hover;
        }
        &:focus {
          border-color: $blizzard;
          box-shadow: $box-shadow-layer-1;
          background-color: $blizzard;
          color: $state-default-focus;
        }
        &:active {
          box-shadow: none;
          color: rgba($state-default-active, 0.21);
        }
      }
    }

    &::-moz-focus-inner {
      // * Support for Firefox browsers.
      border: none;
    }
  }
}
