// small // -------------------------------------------------------------------
@include pre('.button') {
  overflow: hidden;
  float: left;
  display: block;
  box-sizing: border-box;
  height: rem(48px);
  padding: $space-s $space-l;
  border: none;
  border-radius: $button-border-radius;
  margin: 0 $space-s $space-m;
  background-color: transparent;
  font-family: $font-family-sans-serif;
  font-size: rem(14px);
  font-weight: $button-font-weight;
  text-align: center;
  text-decoration: none;
  text-overflow: ellipsis;
  line-height: rem(32px);
  white-space: nowrap;
  transition: $transition-duration-x1 $transition-timing-default;
  transition-property: box-shadow, border, background-color, color;
}

@include pre('.grid--reversed > .button') {
  float: right;
}

@for $index from 1 through $grid-columns {
  $result: (100% / $grid-columns) * $index;

  @include pre('.button--s-#{$index}') {
    width: $result;
  }
}

@include pre('.button--compact') {
  height: rem(40px);
  padding: $space-s $space-m;
  margin: 0 $space-s $space-m;
  font-size: rem(12px);
  line-height: $space-m;
}

@include pre('.button--primary') {
  border: rem(1px) solid $state-default;
  background-color: $state-default;
  color: $blizzard;
}
@include pre('.button--primary.button--error') {
  border: rem(1px) solid $state-error;
  background-color: $state-error;
}
@include pre('.button--primary.button--success') {
  border: rem(1px) solid $state-success;
  background-color: $state-success;
}
@include pre('.button--primary.button--reversed') {
  border: rem(1px) solid $blizzard;
  background-color: $blizzard;
  color: $state-default;
}
@include pre('.button--primary:disabled') {
  border: rem(1px) solid $state-disabled;
  background-color: $state-disabled;
}

@include pre('.button--secondary') {
  border: rem(1px) solid $state-default;
  color: $state-default;
}
@include pre('.button--secondary.button--error') {
  border: rem(1px) solid $state-error;
  color: $state-error;
}
@include pre('.button--secondary.button--success') {
  border: rem(1px) solid $state-success;
  color: $state-success;
}
@include pre('.button--secondary.button--reversed') {
  border: rem(1px) solid $blizzard;
  color: $blizzard;
}
@include pre('.button--secondary:disabled') {
  border: rem(1px) solid $state-disabled;
  color: $state-disabled;
}

// no-touchevents // ----------------------------------------------------------
@include pre('.no-touchevents') {
  @include pre('.button') {
    cursor: pointer;
    user-select: none;
  }
  @include pre('.button:focus') {
    outline: $focus-outline;
  }
  @include pre('.button::-moz-focus-inner') {
    border: none; // * Firefox support
  }

  @include pre('.button--primary:hover') {
    border-color: $state-default-hover;
    background-color: $state-default-hover;
  }
  @include pre('.button--primary:focus') {
    border-color: $state-default-focus;
    background-color: $state-default-focus;
  }
  @include pre('.button--primary:active') {
    border-color: $state-default-active;
    background-color: $state-default-active;
    color: $fossil-transparent;
  }
  @include pre('.button--primary.button--error:hover') {
    border-color: $state-error-hover;
    background-color: $state-error-hover;
  }
  @include pre('.button--primary.button--error:focus') {
    border-color: $state-error-focus;
    background-color: $state-error-focus;
  }
  @include pre('.button--primary.button--error:active') {
    border-color: $state-error-active;
    background-color: $state-error-active;
    color: $fossil-transparent;
  }
  @include pre('.button--primary.button--success:hover') {
    border-color: $state-success-hover;
    background-color: $state-success-hover;
  }
  @include pre('.button--primary.button--success:focus') {
    border-color: $state-success-focus;
    background-color: $state-success-focus;
  }
  @include pre('.button--primary.button--success:active') {
    border-color: $state-success-active;
    background-color: $state-success-active;
    color: $fossil-transparent;
  }
  @include pre('.button--primary.button--reversed:hover') {
    border-color: $blizzard;
    box-shadow: $box-shadow-layer-1;
    background-color: $blizzard;
    color: $state-default-hover;
  }
  @include pre('.button--primary.button--reversed:focus') {
    border-color: $blizzard;
    box-shadow: $box-shadow-layer-1;
    background-color: $blizzard;
    color: $state-default-focus;
  }
  @include pre('.button--primary.button--reversed:active') {
    border-color: $blizzard;
    box-shadow: none;
    color: rgba($state-default-active, 0.21);
  }
  @include pre('.button--primary:disabled') {
    cursor: not-allowed;
  }
  @include pre('.button--primary:disabled:hover') {
    border-color: $state-disabled;
    background-color: $state-disabled;
  }
  @include pre('.button--primary:disabled:active') {
    color: $blizzard;
  }

  @include pre('.button--secondary:hover') {
    border-color: $state-default-hover;
    background-color: $state-default-hover;
    color: $blizzard;
  }
  @include pre('.button--secondary:focus') {
    border-color: $state-default-focus;
    background-color: $state-default-focus;
    color: $blizzard;
  }
  @include pre('.button--secondary:active') {
    border-color: $state-default-active;
    background-color: $state-default-active;
    color: $fossil-transparent;
  }
  @include pre('.button--secondary.button--error:hover') {
    border-color: $state-error-hover;
    background-color: $state-error-hover;
    color: $blizzard;
  }
  @include pre('.button--secondary.button--error:focus') {
    border-color: $state-error-focus;
    background-color: $state-error-focus;
    color: $blizzard;
  }
  @include pre('.button--secondary.button--error:active') {
    border-color: $state-error-active;
    background-color: $state-error-active;
    color: $fossil-transparent;
  }
  @include pre('.button--secondary.button--success:hover') {
    border-color: $state-success-hover;
    background-color: $state-success-hover;
    color: $blizzard;
  }
  @include pre('.button--secondary.button--success:focus') {
    border-color: $state-success-focus;
    background-color: $state-success-focus;
    color: $blizzard;
  }
  @include pre('.button--secondary.button--success:active') {
    border-color: $state-success-active;
    background-color: $state-success-active;
    color: $fossil-transparent;
  }
  @include pre('.button--secondary.button--reversed:hover') {
    border-color: $blizzard;
    box-shadow: $box-shadow-layer-1;
    background-color: $blizzard;
    color: $state-default-hover;
  }
  @include pre('.button--secondary.button--reversed:focus') {
    border-color: $blizzard;
    box-shadow: $box-shadow-layer-1;
    background-color: $blizzard;
    color: $state-default-focus;
  }
  @include pre('.button--secondary.button--reversed:active') {
    box-shadow: none;
    color: rgba($state-default-active, 0.21);
  }
  @include pre('.button--secondary:disabled:hover') {
    border-color: $state-disabled;
    background-color: transparent;
    color: $state-disabled;
    cursor: not-allowed;
  }
  @include pre('.button--secondary:disabled:active') {
    color: $state-disabled;
  }
}

// flex // --------------------------------------------------------------------
@supports (display: flex) {
  @include pre('.button') {
    float: none;
    flex-basis: 100%;
  }

  @for $index from 1 through $grid-columns {
    $result: (100% / $grid-columns) * $index;

    @include pre('.button--s-#{$index}') {
      flex-basis: $result;
      width: auto;
    }
  }
}

// medium // ------------------------------------------------------------------
@media #{$media-m} {
  @include pre('.button') {
    margin: 0 $space-s $space-l;
  }

  @for $index from 1 through $grid-columns {
    $result: (100% / $grid-columns) * $index;

    @include pre('.button--m-#{$index}') {
      width: rem(calc(#{$result} - #{$space-m}));
    }
  }

  // flex // ------------------------------------------------------------------
  @supports (display: flex) {
    @include pre('.button') {
      flex-basis: auto;
    }

    @for $index from 1 through $grid-columns {
      $result: (100% / $grid-columns) * $index;

      @include pre('.button--m-#{$index}') {
        flex-basis: rem(calc(#{$result} - #{$space-m}));
        width: auto;
      }
    }
  }
}

// large // -------------------------------------------------------------------
@media #{$media-l} {
  @for $index from 1 through $grid-columns {
    $result: (100% / $grid-columns) * $index;

    @include pre('.button--l-#{$index}') {
      width: rem(calc(#{$result} - #{$space-m}));
    }
  }

  // flex // ------------------------------------------------------------------
  @supports (display: flex) {
    @for $index from 1 through $grid-columns {
      $result: (100% / $grid-columns) * $index;

      @include pre('.button--l-#{$index}') {
        width: auto;
        flex-basis: rem(calc(#{$result} - #{$space-m}));
      }
    }
  }
}
