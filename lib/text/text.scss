// Table of Contents
//
// 1 Pattern outline
// 2 Imports
// 3 Touch devices
//   3.1 Medium devices
//   3.2 Large devices
// 4 Mouse-driven devices

// 1 Pattern outline
// =============================================================================

// .text
// | .text__input
// | .text__label
// | .text__border
// | .text__message

// 2 Imports
// =============================================================================

@import '../utilities/scss/variables/namespace';
@import '../utilities/scss/variables/tokens';
@import '../utilities/scss/functions/rem';
@import '../utilities/scss/mixins/device';

// 3 Touch devices
// =============================================================================

.#{$pre}-text {
  position: relative;
  height: rem(80px);
  margin: $space-stack-m;
}

.#{$pre}-text__input {
  position: absolute;
  top: rem(16px);
  left: 0;
  overflow: auto;
  display: block;
  box-sizing: border-box;
  width: 100%;
  height: rem(40px);
  padding: $space-s $space-xxl $space-s 0;
  border: none;
  border-bottom: rem(1px) solid $viking-shade;

  // * Support for Mobile Safari.
  border-radius: 0;

  outline: none;
  background-color: transparent;
  color: $gunmetal;
  font-family: $font-family-sans-serif;
  font-size: rem(14px);
  line-height: rem(24px);
}

.#{$pre}-text__input:disabled {
  // * Support for Mobile Safari.
  opacity: 1;

  border-color: $state-disabled;
  color: $fossil;

  // * Support for Mobile Safari.
  -webkit-text-fill-color: $fossil;
}
// * Support for Firefox.
.#{$pre}-text__input:invalid {
  box-shadow: none;
}
.#{$pre}-text__input[readonly] {
  padding: 0;
  border: none;
  color: inherit;

  // * Removes pointer events for empty readonly inputs.
  pointer-events: none;
}
// * Adds pointer events back for populated readonly inputs.
.#{$pre}-text__input[readonly].#{$pre}-active {
  pointer-events: auto;
}
.#{$pre}-text__input:required {
  box-shadow: none;
}

// * Support for IE11.
.#{$pre}-text__input::-ms-clear {
  display: none;
}
// * Support for IE11.
.#{$pre}-text__input::-ms-reveal {
  display: none;
}

.#{$pre}-text--error > .#{$pre}-text__input {
  border-bottom: rem(1px) solid $state-error;
}
.#{$pre}-text--success > .#{$pre}-text__input {
  border-bottom: rem(1px) solid $state-success;
}

.#{$pre}-text__input.#{$pre}-active:disabled {
  color: $fossil;
}

// * Support for Firefox.
.#{$pre}-text__input[type='number'] {
  -moz-appearance: textfield;
}

.#{$pre}-text__input[type='number']::-webkit-inner-spin-button {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  margin: 0;
}
.#{$pre}-text__input[type='number']::-webkit-outer-spin-button {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  margin: 0;
}

.#{$pre}-text__input::placeholder {
  color: $blizzard-transparent;
  transition: color $transition-duration-x1 $transition-timing-default;
}

.#{$pre}-text__input:focus::placeholder {
  color: $fossil;
  transition: color $transition-duration-x1 $transition-timing-default
    $transition-duration-x1;
}

.#{$pre}-text__label {
  position: absolute;
  top: rem(24px);
  left: 0;
  color: $gunmetal;
  font-size: rem(14px);
  line-height: rem(24px);
  transition: top $transition-duration-x2 $transition-timing-default
      $transition-duration-x1,
    color $transition-duration-x1 $transition-timing-default
      $transition-duration-x1,
    font-size $transition-duration-x2 $transition-timing-default
      $transition-duration-x1,
    line-height $transition-duration-x2 $transition-timing-default
      $transition-duration-x1;
  pointer-events: none;
  user-select: none;
}

.#{$pre}-text__input:disabled + .#{$pre}-text__label {
  color: $fossil;
}
.#{$pre}-text__input[readonly] + .#{$pre}-text__label {
  color: $christi-shade;
}

.#{$pre}-text__input:focus + .#{$pre}-text__label {
  top: 0;
  color: $hurricane;
  font-size: rem(12px);
  line-height: rem(16px);
  transition: top $transition-duration-x2 $transition-timing-default,
    color $transition-duration-x1 $transition-timing-default,
    font-size $transition-duration-x2 $transition-timing-default,
    line-height $transition-duration-x2 $transition-timing-default;
}

.#{$pre}-text__input.#{$pre}-active + .#{$pre}-text__label {
  top: 0;
  color: $hurricane;
  font-size: rem(12px);
  line-height: rem(16px);
}

.#{$pre}-text__input.#{$pre}-active:disabled + .#{$pre}-text__label {
  color: $state-disabled;
}
.#{$pre}-text__input.#{$pre}-active[readonly] + .#{$pre}-text__label {
  color: $christi-shade;
}

.#{$pre}-text__input + .#{$pre}-text__label::after {
  content: ' *';
  position: relative;
  top: rem(-16px);
  color: rgba($state-error-focus, 0);
  transition: top $transition-duration-x2 $transition-timing-default,
    color $transition-duration-x1 $transition-timing-default;
}

// * This pseudo-selector exists to handle the asterisk transition when a
// * required text input is toggled to a disabled text-input.
.#{$pre}-text__input:disabled + .#{$pre}-text__label::after {
  top: rem(-16px);
  color: rgba($state-error-focus, 0);
}
.#{$pre}-text__input:required + .#{$pre}-text__label::after {
  top: 0;
  color: $state-error-focus;
}

.#{$pre}-text__input[readonly]:required + .#{$pre}-text__label::after {
  top: rem(-16px);
  color: rgba($state-error-focus, 0);
}

.#{$pre}-text__input.#{$pre}-active:required + .#{$pre}-text__label::after {
  top: rem(-16px);
  color: rgba($state-error-focus, 0);
}

.#{$pre}-text > .#{$pre}-icon {
  position: absolute;
  top: rem(24px);
  right: rem(8px);
  stroke-width: 1;
  fill: none;
  transition: stroke $transition-duration-x1 $transition-timing-default;
  pointer-events: none;
}

.#{$pre}-text > .#{$pre}-icon--close {
  stroke: $state-error;
}
.#{$pre}-text > .#{$pre}-icon--tick {
  stroke: $state-success;
}

.#{$pre}-text__border {
  display: none;
}

.#{$pre}-text__message {
  position: absolute;
  bottom: 0;
  left: 0;
  color: rgba($state-default, 0);
  font-size: rem(12px);
  line-height: rem(16px);
  transition: color $transition-duration-x1 $transition-timing-default;
  user-select: none;
}

.#{$pre}-text--error > .#{$pre}-text__message {
  color: $state-error;
}
.#{$pre}-text--success > .#{$pre}-text__message {
  color: $state-success;
}

// 3.1 Medium devices
// -----------------------------------------------------------------------------

@include device(medium) {
  .#{$pre}-text__input {
    padding: $space-xs $space-xxl $space-xs 0;
    font-size: rem(15px);
    line-height: rem(32px);
  }

  .#{$pre}-text__label {
    font-size: rem(15px);
  }
}

// 3.2 Large devices
// -----------------------------------------------------------------------------

@include device(large) {
  .#{$pre}-text__input {
    font-size: rem(16px);
  }

  .#{$pre}-text__label {
    font-size: rem(16px);
  }
}

// 4 Mouse-driven devices
// =============================================================================

@include device(mouse-driven) {
  .#{$pre}-text__input {
    border-bottom: $input-border;
    transition: color $transition-duration-x1 $transition-timing-default;
  }

  .#{$pre}-text__input:disabled {
    border-bottom-color: $state-disabled;
  }
  .#{$pre}-text__input[readonly] {
    border-bottom: none;
  }

  .#{$pre}-text__input.#{$pre}-active:disabled {
    color: $fossil;
    cursor: not-allowed;
  }

  .#{$pre}-text__input.#{$pre}-active:focus {
    color: inherit;
  }

  .#{$pre}-text__input:disabled + .#{$pre}-text__label {
    color: $fossil;
  }
  .#{$pre}-text__input[readonly] + .#{$pre}-text__label {
    color: $christi-shade;
  }

  .#{$pre}-text__input:focus + .#{$pre}-text__label {
    color: $gunmetal;
  }

  .#{$pre}-text__input[readonly]:focus + .#{$pre}-text__label {
    color: $christi-shade;
  }

  .#{$pre}-text__input.#{$pre}-active + .#{$pre}-text__label {
    color: $hurricane;
  }

  .#{$pre}-text__input.#{$pre}-active:disabled + .#{$pre}-text__label {
    color: $state-disabled;
  }
  .#{$pre}-text__input.#{$pre}-active[readonly] + .#{$pre}-text__label {
    color: $christi-shade;
  }

  .#{$pre}-text__input.#{$pre}-active:focus + .#{$pre}-text__label {
    color: $gunmetal;
  }

  .#{$pre}-text__input.#{$pre}-active[readonly]:focus + .#{$pre}-text__label {
    color: $christi-shade;
  }

  .#{$pre}-text--error > .#{$pre}-text__input:hover ~ .#{$pre}-icon {
    stroke: $state-error-hover;
  }
  .#{$pre}-text--error > .#{$pre}-text__input:focus ~ .#{$pre}-icon {
    stroke: $state-error-focus;
  }
  .#{$pre}-text--success > .#{$pre}-text__input:hover ~ .#{$pre}-icon {
    stroke: $state-success-hover;
  }
  .#{$pre}-text--success > .#{$pre}-text__input:focus ~ .#{$pre}-icon {
    stroke: $state-success-focus;
  }

  .#{$pre}-text__border {
    position: absolute;
    top: rem(55px);
    display: block;
    width: 0;
    height: rem(1px);
    background-color: $viking;
    transition: width $transition-duration-x4 $transition-timing-default,
      background $transition-duration-x1 $transition-timing-default;
    pointer-events: none;
  }

  .#{$pre}-text__input:hover ~ .#{$pre}-text__border {
    width: 100%;
  }
  .#{$pre}-text__input:focus ~ .#{$pre}-text__border {
    width: 100%;
  }

  .#{$pre}-text__input.#{$pre}-active ~ .#{$pre}-text__border {
    width: 100%;
    background-color: $state-default;
  }

  .#{$pre}-text__input.#{$pre}-active:hover ~ .#{$pre}-text__border {
    background-color: $state-default-hover;
  }
  .#{$pre}-text__input.#{$pre}-active:focus ~ .#{$pre}-text__border {
    background-color: $state-default-focus;
  }

  .#{$pre}-text--error > .#{$pre}-text__input ~ .#{$pre}-text__border {
    width: 100%;
    background-color: $state-error;
  }

  .#{$pre}-text--error > .#{$pre}-text__input:hover ~ .#{$pre}-text__border {
    background-color: $state-error-hover;
  }
  .#{$pre}-text--error > .#{$pre}-text__input:focus ~ .#{$pre}-text__border {
    background-color: $state-error-focus;
  }

  .#{$pre}-text--success > .#{$pre}-text__input ~ .#{$pre}-text__border {
    width: 100%;
    background-color: $state-success;
  }

  .#{$pre}-text--success > .#{$pre}-text__input:hover ~ .#{$pre}-text__border {
    background-color: $state-success-hover;
  }
  .#{$pre}-text--success > .#{$pre}-text__input:focus ~ .#{$pre}-text__border {
    background-color: $state-success-focus;
  }

  .#{$pre}-text--error > .#{$pre}-text__input:hover ~ .#{$pre}-text__message {
    color: $state-error-hover;
  }
  .#{$pre}-text--error > .#{$pre}-text__input:focus ~ .#{$pre}-text__message {
    color: $state-error-focus;
  }

  .#{$pre}-text--success > .#{$pre}-text__input:hover ~ .#{$pre}-text__message {
    color: $state-success-hover;
  }
  .#{$pre}-text--success > .#{$pre}-text__input:focus ~ .#{$pre}-text__message {
    color: $state-success-focus;
  }
}
